workflows:
  main:
    name: Publish Workflow Android

    environment:
      flutter: stable
      groups:
        - jf    

    scripts:
          - name: Check a new tag
            script: |
              TAG_VERSION=$(grep version pubspec.yaml |  awk -F  ': ' '{print $2}'| awk '{print substr($0, 1, 4)}'| awk -v build="$PROJECT_BUILD_NUMBER" '{printf "%s%s\n", $0, build}')
              echo $TAG_VERSION
              echo "VERSION=$TAG_VERSION" >> $CM_ENV
#              git tag $TAG_VERSION
#              git push origin $TAG_VERSION

          - name: Install Java 17
            script: |
              echo $VERSION
              brew update
              brew install openjdk-17-jdk
              export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64

#          - name: Install Google Cloud CLI
#            script: |
#              curl https://sdk.cloud.google.com | bash
#              exec -l $SHELL
#              gcloud init

          - name: 'Flutter Pub Get'
            script: flutter pub get

          - name: 'Flutter Build AAR'
            script: flutter build aar

          - name: 'Set app/build.gradlemulti versions'
            script: |
              perl -i -p0e 's/compileSdkVersion 31/compileSdkVersion 33/g' .android/app/build.gradle
              perl -i -p0e 's/minSdkVersion 16/minSdkVersion 19/g' .android/app/build.gradle
              perl -i -p0e 's/targetSdkVersion 31/targetSdkVersion 33/g' .android/app/build.gradle

#          - name: 'Append build.gradlemulti script'
#            script: |
#              cat publish.gradle >> .android/build.gradle

          - name: 'Flutter Build AAR'
            script: |
              flutter build aar --no-debug --no-profile --build-number $VERSION

          - name: 'Publish sqflite_release aar to Jfrog'
            script: |
              curl -fL "https://install-cli.jfrog.io" | sh;
              jf config add --password=$JF_PASSWORD  --artifactory-url=$JF_URL --interactive=false trc1-gradle-dev3 --user=$JF_USER_NAME
              jf project init
              echo $CM_BUILD_DIR
              cd build/host/outputs/repo/com/tekartik/sqflite/sqflite_release  
              jf rt upload "./$VERSION/*.aar" trc1-gradle-dev-local/com/tekartik/sqflite/sqflite_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
              jf rt upload "./$VERSION/*.pom" trc1-gradle-dev-local/com/tekartik/sqflite/sqflite_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
              jf rt upload "./$VERSION/*.module" trc1-gradle-dev-local/com/tekartik/sqflite/sqflite_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
              
          - name: 'Publish chatbot aar to Jfrog'
            script: |
              curl -fL "https://install-cli.jfrog.io" | sh;
              jf config add --password=$JF_PASSWORD --url=$JF_URL --interactive=false trc1-gradle-dev3 --user=$JF_USER_NAME
              echo $CM_BUILD_DIR
              cd build/host/outputs/repo/com/thinkresearch/chatbot_native/flutter_release  
              jf rt upload "./$VERSION/*.aar" trc1-gradle-dev-local/com/thinkresearch/chatbot/flutter_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
              jf rt upload "./$VERSION/*.pom" trc1-gradle-dev-local/com/thinkresearch/chatbot/flutter_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
              jf rt upload "./$VERSION/*.module" trc1-gradle-dev-local/com/thinkresearch/chatbot/flutter_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL              

          - name: 'Publish pathprovider aar to Jfrog'
            script: |
              curl -fL "https://install-cli.jfrog.io" | sh;
              jf config add --password=$JF_PASSWORD --url=$JF_URL --interactive=false trc1-gradle-dev3 --user=$JF_USER_NAME
              echo $CM_BUILD_DIR
              cd build/host/outputs/repo/io/flutter/plugins/pathprovider/path_provider_android_release
              jf rt upload "./$VERSION/*.aar" trc1-gradle-dev-local/io/flutter/plugins/pathprovider/path_provider_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
              jf rt upload "./$VERSION/*.pom" trc1-gradle-dev-local/io/flutter/plugins/pathprovider/path_provider_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
              jf rt upload "./$VERSION/*.module" trc1-gradle-dev-local/io/flutter/plugins/pathprovider/path_provider_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL              

          - name: 'Publish sharedpreferences aar to Jfrog'
            script: |
              curl -fL "https://install-cli.jfrog.io" | sh;
              jf config add --password=$JF_PASSWORD --url=$JF_URL --interactive=false trc1-gradle-dev3 --user=$JF_USER_NAME
              echo $CM_BUILD_DIR
              cd build/host/outputs/repo/io/flutter/plugins/sharedpreferences/shared_preferences_android_release
              jf rt upload "./$VERSION/*.aar" trc1-gradle-dev-local/io/flutter/plugins/sharedpreferences/shared_preferences_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
              jf rt upload "./$VERSION/*.pom" trc1-gradle-dev-local/io/flutter/plugins/sharedpreferences/shared_preferences_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
              jf rt upload "./$VERSION/*.module" trc1-gradle-dev-local/io/flutter/plugins/sharedpreferences/shared_preferences_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL              

          - name: 'Publish urllauncher aar to Jfrog'
            script: |
              curl -fL "https://install-cli.jfrog.io" | sh;
              jf config add --password=$JF_PASSWORD --url=$JF_URL --interactive=false trc1-gradle-dev3 --user=$JF_USER_NAME
              echo $CM_BUILD_DIR
              cd build/host/outputs/repo/io/flutter/plugins/urllauncher/url_launcher_android_release
              jf rt upload "./$VERSION/*.aar" trc1-gradle-dev-local/io/flutter/plugins/urllauncher/url_launcher_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
              jf rt upload "./$VERSION/*.pom" trc1-gradle-dev-local/io/flutter/plugins/urllauncher/url_launcher_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
              jf rt upload "./$VERSION/*.module" trc1-gradle-dev-local/io/flutter/plugins/urllauncher/url_launcher_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL              

          - name: 'Publish webviewflutter aar to Jfrog'
            script: |
              curl -fL "https://install-cli.jfrog.io" | sh;
              jf config add --password=$JF_PASSWORD --url=$JF_URL --interactive=false trc1-gradle-dev3 --user=$JF_USER_NAME
              echo $CM_BUILD_DIR
              cd build/host/outputs/repo/io/flutter/plugins/webviewflutter/webview_flutter_android_release
              jf rt upload "./$VERSION/*.aar" trc1-gradle-dev-local/io/flutter/plugins/webviewflutter/webview_flutter_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
              jf rt upload "./$VERSION/*.pom" trc1-gradle-dev-local/io/flutter/plugins/webviewflutter/webview_flutter_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
              jf rt upload "./$VERSION/*.module" trc1-gradle-dev-local/io/flutter/plugins/webviewflutter/webview_flutter_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL              

            # You can add more scripts or steps as needed
         # - name: Publish to Google Cloud
         #  script: | 
         #     echo $GCLOUD_STORAGE_KEY > $CM_BUILD_DIR/gcloud_storage_key.json
         #     gcloud auth activate-service-account --key-file $CM_BUILD_DIR/gcloud_storage_key.json
         #     gsutil cp $CM_BUILD_DIR/app/build/outputs/**/*.aar gs://think-research-maven-repo-bucket
  ios:
    name: Publish WOrkflow iOS
    environment:
      flutter: stable
    scripts:
      - name: Check a new tag
        script: |
          TAG_VERSION=$(grep version pubspec.yaml |  awk -F  ': ' '{print $2}'| awk '{print substr($0, 1, 4)}'| awk -v build="$PROJECT_BUILD_NUMBER" '{printf "%s%s\n", $0, build}')
          echo $TAG_VERSION
          echo "VERSION=$TAG_VERSION" >> $CM_ENV
          

      - name: 'Flutter Pub Get'
        script: flutter pub get

      - name: 'Add embed script in Xcode Project Build phases'
        script: |
          cd .ios
          perl -i -p0e 's/shellScript = "\/bin\/sh \\"\$FLUTTER_ROOT\/packages\/flutter_tools\/bin\/xcode_backend\.sh\\" build";/shellScript = "\/bin\/sh \\"\$FLUTTER_ROOT\/packages\/flutter_tools\/bin\/xcode_backend\.sh\\" build\\n\/bin\/sh \\"\$FLUTTER_ROOT\/packages\/flutter_tools\/bin\/xcode_backend\.sh\\" embed\\n";/s' ./Runner.xcodeproj/project.pbxproj

      - name: "Build Frameworks"
        script: |
          flutter build ios-framework --output=Frameworks --no-profile


      - name : "Clone the iOS SDK"
        script: |
          git clone https://sts_archtech@bitbucket.org/architech/thinkresearch-ios-sdk.git

      - name : "Copy fromework to SDK Folder"
        script: |
          cp -r $CM_BUILD_DIR/Frameworks  ChatBotSDK/
            
        
    
    
    

    artifacts:
      - $CM_BUILD_DIR/Frameworks/**/*.zip
      - $CM_BUILD_DIR/Frameworks/**/*.txt
