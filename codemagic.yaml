workflows:
  main:
    name: Publish Workflow Android

    environment:
      flutter: '3.13.0'
      java: 17
      groups:
        - jf

    scripts:
      - name: Check a new tag
        script: |
          TAG_VERSION=$(grep version pubspec.yaml |  awk -F  ': ' '{print $2}'| awk '{print substr($0, 1, 4)}'| awk -v build="$PROJECT_BUILD_NUMBER" '{printf "%s%s\n", $0, build}')
          echo $TAG_VERSION
          echo "VERSION=$TAG_VERSION" >> $CM_ENV
      #              git tag $TAG_VERSION
      #              git push origin $TAG_VERSION

      #          - name: Install Google Cloud CLI
      #            script: |
      #              curl https://sdk.cloud.google.com | bash
      #              exec -l $SHELL
      #              gcloud init

      - name: 'Flutter Pub Get'
        script: flutter pub get

      - name: 'Set app/build.gradlemulti versions'
        script: |
          perl -i -p0e 's/compileSdkVersion 31/compileSdkVersion 33/g' .android/app/build.gradle
          perl -i -p0e 's/minSdkVersion 16/minSdkVersion 19/g' .android/app/build.gradle
          perl -i -p0e 's/targetSdkVersion 31/targetSdkVersion 33/g' .android/app/build.gradle

      - name: 'Flutter Build AAR'
        script: |
          flutter build aar --no-debug --no-profile --build-number $VERSION

      - name: 'Publish sqflite_release aar to Jfrog'
        script: |
          curl -fL "https://install-cli.jfrog.io" | sh;
          jf config add --password=$JF_PASSWORD  --artifactory-url=$JF_URL --interactive=false trc1-gradle-dev-local --user=$JF_USER_NAME
          jf project init
          cd build/host/outputs/repo/com/tekartik/sqflite/sqflite_release
          ls
          jf rt upload "./$VERSION/*.aar" trc1-gradle-dev-local/com/tekartik/sqflite/sqflite_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
          jf rt upload "./$VERSION/*.pom" trc1-gradle-dev-local/com/tekartik/sqflite/sqflite_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL

      - name: 'Publish chatbot aar to Jfrog'
        script: |
          curl -fL "https://install-cli.jfrog.io" | sh;
          jf config add --password=$JF_PASSWORD --url=$JF_URL --interactive=false trc1-gradle-dev-local --user=$JF_USER_NAME
          cd build/host/outputs/repo/com/thinkresearch/chatbot_native/flutter_release
          ls
          jf rt upload "./$VERSION/*.aar" trc1-gradle-dev-local/com/thinkresearch/chatbot_native/flutter_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
          jf rt upload "./$VERSION/*.pom" trc1-gradle-dev-local/com/thinkresearch/chatbot_native/flutter_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL

      - name: 'Publish pathprovider aar to Jfrog'
        script: |
          curl -fL "https://install-cli.jfrog.io" | sh;
          jf config add --password=$JF_PASSWORD --url=$JF_URL --interactive=false trc1-gradle-dev-local --user=$JF_USER_NAME
          cd build/host/outputs/repo/io/flutter/plugins/pathprovider/path_provider_android_release
          ls
          jf rt upload "./$VERSION/*.aar" trc1-gradle-dev-local/io/flutter/plugins/pathprovider/path_provider_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
          jf rt upload "./$VERSION/*.pom" trc1-gradle-dev-local/io/flutter/plugins/pathprovider/path_provider_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL

      - name: 'Publish sharedpreferences aar to Jfrog'
        script: |
          curl -fL "https://install-cli.jfrog.io" | sh;
          jf config add --password=$JF_PASSWORD --url=$JF_URL --interactive=false trc1-gradle-dev-local --user=$JF_USER_NAME
          cd build/host/outputs/repo/io/flutter/plugins/sharedpreferences/shared_preferences_android_release
          ls
          jf rt upload "./$VERSION/*.aar" trc1-gradle-dev-local/io/flutter/plugins/sharedpreferences/shared_preferences_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
          jf rt upload "./$VERSION/*.pom" trc1-gradle-dev-local/io/flutter/plugins/sharedpreferences/shared_preferences_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL

      - name: 'Publish urllauncher aar to Jfrog'
        script: |
          curl -fL "https://install-cli.jfrog.io" | sh;
          jf config add --password=$JF_PASSWORD --url=$JF_URL --interactive=false trc1-gradle-dev-local --user=$JF_USER_NAME
          cd build/host/outputs/repo/io/flutter/plugins/urllauncher/url_launcher_android_release
          ls
          jf rt upload "./$VERSION/*.aar" trc1-gradle-dev-local/io/flutter/plugins/urllauncher/url_launcher_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
          jf rt upload "./$VERSION/*.pom" trc1-gradle-dev-local/io/flutter/plugins/urllauncher/url_launcher_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL

      - name: 'Publish webviewflutter aar to Jfrog'
        script: |
          curl -fL "https://install-cli.jfrog.io" | sh;
          jf config add --password=$JF_PASSWORD --url=$JF_URL --interactive=false trc1-gradle-dev-local --user=$JF_USER_NAME
          cd build/host/outputs/repo/io/flutter/plugins/webviewflutter/webview_flutter_android_release
          ls
          jf rt upload "./$VERSION/*.aar" trc1-gradle-dev-local/io/flutter/plugins/webviewflutter/webview_flutter_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL
          jf rt upload "./$VERSION/*.pom" trc1-gradle-dev-local/io/flutter/plugins/webviewflutter/webview_flutter_android_release/ --user $JF_USER_NAME --password $JF_PASSWORD --url $JF_URL

        # You can add more scripts or steps as needed
      # - name: Publish to Google Cloud
      #  script: |
      #     echo $GCLOUD_STORAGE_KEY > $CM_BUILD_DIR/gcloud_storage_key.json
      #     gcloud auth activate-service-account --key-file $CM_BUILD_DIR/gcloud_storage_key.json
      #     gsutil cp $CM_BUILD_DIR/app/build/outputs/**/*.aar gs://think-research-maven-repo-bucket
  ios:
    name: Publish WOrkflow iOS

    environment:
      flutter: stable
      groups:
        - jf
      vars:
        COCOAPODS_TRUNK_TOKEN:  "ed2707a69720522a8be2c2faf79e64af"
    scripts:

      - name: 'Flutter Pub Get'
        script: |
          flutter pub get
      - name: 'Updating minimum deployment Target'
        script: |
          
          cd .ios && perl -i -pe 's/IPHONEOS_DEPLOYMENT_TARGET = 11.0;/IPHONEOS_DEPLOYMENT_TARGET = 13.0;/g' Runner.xcodeproj/project.pbxproj && sed -i '' 's/platform :ios, '\''11.0'\''/platform :ios, '\''13.0'\''/g' Podfile

      - name: 'Add embed script in Xcode Project Build phases'
        script: |
          cd .ios
          perl -i -p0e 's/shellScript = "\/bin\/sh \\"\$FLUTTER_ROOT\/packages\/flutter_tools\/bin\/xcode_backend\.sh\\" build";/shellScript = "\/bin\/sh \\"\$FLUTTER_ROOT\/packages\/flutter_tools\/bin\/xcode_backend\.sh\\" build\\n\/bin\/sh \\"\$FLUTTER_ROOT\/packages\/flutter_tools\/bin\/xcode_backend\.sh\\" embed\\n";/s' ./Runner.xcodeproj/project.pbxproj

      - name: "Build Frameworks"
        script: |
          
          flutter build ios-framework --output=Frameworks --no-profile
          echo "ssss"

      - name : "Clone the iOS SDK"
        script: |
          git clone https://x-token-auth:ATCTT3xFfGN0CqY_62SAgI6ndlX5FQoUJbzrr-kuzjE8vfSneSzmTgL0wO5exP8S3HJ5W3CGcl1d1fIa6XDHFeSoeGoWIRujlz6c-v6drkRIbdtRUJC6JD3WM0SZbEXs6Ul9cSWz3G269jlmTrZVbYmM9f-VCcqI7AE6pK7U7XVZm4Ll0EI-LTo=A43A8654@bitbucket.org/architech/thinkresearch-ios-sdk.git

      - name : "Copy fromework to SDK Folder"
        script: |
          cp -r $CM_BUILD_DIR/Frameworks  thinkresearch-ios-sdk/

      - name : "Updating the version details"
        script: |
          
          cd thinkresearch-ios-sdk/
          
          export TAG_VERSION=$( grep version $CM_BUILD_DIR/pubspec.yaml |  awk -F  ': ' '{print $2}' |awk '{print substr($0, 1, 5)}')
          echo "Version going  to update at $TAG_VERSION"
          
          sed -i '' -E "s/[0-9]+\.[0-9]+\.[0-9]+/${TAG_VERSION}/g" Think_research_messenger_SDK_Release.podspec
          sed -i '' -E "s/[0-9]+\.[0-9]+\.[0-9]+/${TAG_VERSION}/g" Think_research_messenger_SDK_Debug.podspec



      - name : "Commiting the changes"
        script: |
          export TAG_VERSION=$( grep version $CM_BUILD_DIR/pubspec.yaml |  awk -F  ': ' '{print $2}' |awk '{print substr($0, 1, 5)}')
          
          cd thinkresearch-ios-sdk/
          git status
          git add Frameworks/
          git add Think_research_messenger_SDK_Release.podspec
          git add Think_research_messenger_SDK_Debug.podspec
          git commit -m "Pipeline Deployment $TAG_VERSION"
          git tag $TAG_VERSION
          git push
          git push --tag

      - name : "Pushing to CocoaPods registry Release Podspec"
        script: |
          cd thinkresearch-ios-sdk/
          
          pod trunk push Think_research_messenger_SDK_Release.podspec --allow-warnings 

      - name : "Pushing to CocoaPods registry Debug Podspec"
        script: |
          cd thinkresearch-ios-sdk/
          
          pod trunk push Think_research_messenger_SDK_Debug.podspec --allow-warnings